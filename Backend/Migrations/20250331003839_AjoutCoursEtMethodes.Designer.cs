// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250331003839_AjoutCoursEtMethodes")]
    partial class AjoutCoursEtMethodes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("backend.Models.Cours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("backend.Models.Exercice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Correction")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Niveau")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Exercices");
                });

            modelBuilder.Entity("backend.Models.Methode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conclusion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contenu")
                        .HasColumnType("TEXT");

                    b.Property<int>("CoursId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Exemples")
                        .HasColumnType("TEXT");

                    b.Property<string>("Introduction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CoursId");

                    b.ToTable("Methodes");
                });

            modelBuilder.Entity("backend.Models.QCM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Correction")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExerciceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Options")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExerciceId");

                    b.ToTable("QCMs");

                    b.HasAnnotation("Relational:JsonPropertyName", "QCM");
                });

            modelBuilder.Entity("backend.Models.Methode", b =>
                {
                    b.HasOne("backend.Models.Cours", "Cours")
                        .WithMany("Methodes")
                        .HasForeignKey("CoursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cours");
                });

            modelBuilder.Entity("backend.Models.QCM", b =>
                {
                    b.HasOne("backend.Models.Exercice", "Exercice")
                        .WithMany("QCM")
                        .HasForeignKey("ExerciceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercice");
                });

            modelBuilder.Entity("backend.Models.Cours", b =>
                {
                    b.Navigation("Methodes");
                });

            modelBuilder.Entity("backend.Models.Exercice", b =>
                {
                    b.Navigation("QCM");
                });
#pragma warning restore 612, 618
        }
    }
}
